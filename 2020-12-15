# ASP



**ASP란?**

: Active Server Pages의 약자 동적으로 서버에서 작동하는 페이지 ↔ HTML

: 서버사이드 스크립트(ASP) ↔ 클라이언트 사이드 스크립트 (JavaScript)

: 서버 스크립트를 구분하는 구분자는 <%와 %>, 이 사이에사용된 스크립트는 서버에서 실행 

  → 브라우저에서 HTML 보기를 해도 ASP 코드 내용은 보이지 않는다.

: 서버에서 실행되고 그 결과만을 가져다 보여주기 때문에 HTML 소스에는 그 결과값만 보인다



**작동원리**

: 웹사이트 이용자가 어떠한 ASP페이지에 접속하면 이 ASP페이지는 ASP.DLL을 거처 해석된 다음 HTML 태그로 바뀌어짐. 그럼 웹 브라우저가 이 HTML을 해석하여 화면에 보여주는것.

![img](http://www.taeyo.net/Lecture/Dukyoung/images/sample03.gif)





**ASP 사용 이유**

- 사용자와의 동적인 상호작용

HTML은 기본적으로 정보를 보여주기만 한다.(정적)

하이퍼링크를 통해 사용자가 요청을 하면 웹 서버가 그 요청에 응답하여 원하는 웹 페이지를 보여주는 방식으로 작업이 진행되기 때문.

이것도 일종의 상호작용으로 할 수 있겠으나 웹 서버를 운영하는 사람과 사용자가 서로 어떤 정보를 주고 받는다든지 아니면 사용자들간에 서로 정보를 주고 받는다든지 하는 일은 기본적으로 불가능함. ASP는 HTML로 불가능한 이런 일들을 가능하게 해줌.

 

- 서버측 자원을 사용해야 하는 경우

사용자로부터 어떤 내용을 입력받아 데이터베이스에 저장해야 할 경우와 같은 건데 이럴 경우는 반드시 ASP를 사용해야한다. 예를 들어 게시판 작성, 파일 업로드, ID인증 등과 같이 서버에 어떤 정보를 저장하거나 저장된 정보를 이용해 일을 하는 경우에는 ASP를 사용해야함.

왜냐하면 HTML은 원칙적으로 클라이언트에서 번역되는 문서이기 때문에 서버의 다른 자원에 접근 할 수가 없기 때문

 

- 스크립트의 안정적인 실행을 위해서

자바스크립트를 예를들면 버전은 점점 더 높아진다. 그러다보면 상위 버전의 자바스크립트를 삽입한 HTML 문서가 어떤 웹 브라우저에서는 의도하는대로 번역이 되지 않는 사태가 벌어질 수도 있음. 이럴 경우 서버에서 실행되는 스크립트라면 서버에서 HTML형태로 번역된 후 넘겨지게 되니깐 어떤 웹 브라우저에서라도 잘못될 염려가 없을 것

 

- 스트립트 소스를 감추기 위해서

클라이언트측 스크립트들은 HTML 속에 포함되어 서버에서 클라이언트로 전송된 다음 클라이언트의 웹 브라우저에서 번역됨. 따라서 사용자들은 소스보기를 통해 스크립트의 내용을 볼 수가 있음.

그러나 서버측 스크립트를 사용함으로써 개발자는 자신의 독특한 알고리즘을 감출 수가 있음. 



# IIS

**IIS란?**

: Internet Information Services의 약자, 마이크로소프트 윈도우를 사용하는 서버들을 위한 인터넷 기반 서비스들의 모임(윈도우 서버와의 호환성이 좋으며 웹 프로그래밍 언어 및 기술로 ASP와 ASP.NET이 주력)

: 아파치 웹서버에 이어 세계에서 두번째로 가장 잘 알려진 웹서버

: 윈도우 OS에서만 사용이 가능하다는점 

:일반적인 HTTP 지원, SMTP 메일 전송 프로토콜 지원, FTP 파일 전송 프로토콜 지원



